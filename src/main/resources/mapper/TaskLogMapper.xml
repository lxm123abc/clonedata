<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zte.clonedata.dao.TaskLogMapper">
  <resultMap id="BaseResultMap" type="com.zte.clonedata.model.TaskLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="begintime" jdbcType="VARCHAR" property="begintime" />
    <result column="endtime" jdbcType="VARCHAR" property="endtime" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="execute_result" jdbcType="VARCHAR" property="executeResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, begintime, endtime, time, status, execute_result
  </sql>
  <select id="selectByExample" parameterType="com.zte.clonedata.model.TaskLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tasklog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tasklog
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tasklog
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zte.clonedata.model.TaskLogExample">
    delete from tasklog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zte.clonedata.model.TaskLog">
    insert into tasklog (id, type, begintime, 
      endtime, time, status, 
      execute_result)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{begintime,jdbcType=VARCHAR}, 
      #{endtime,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{executeResult,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zte.clonedata.model.TaskLog">
    insert into tasklog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="begintime != null">
        begintime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="executeResult != null">
        execute_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="executeResult != null">
        #{executeResult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zte.clonedata.model.TaskLogExample" resultType="java.lang.Long">
    select count(*) from tasklog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tasklog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.begintime != null">
        begintime = #{record.begintime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.executeResult != null">
        execute_result = #{record.executeResult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tasklog
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      begintime = #{record.begintime,jdbcType=VARCHAR},
      endtime = #{record.endtime,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      execute_result = #{record.executeResult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zte.clonedata.model.TaskLog">
    update tasklog
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="begintime != null">
        begintime = #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="executeResult != null">
        execute_result = #{executeResult,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zte.clonedata.model.TaskLog">
    update tasklog
    set type = #{type,jdbcType=INTEGER},
      begintime = #{begintime,jdbcType=VARCHAR},
      endtime = #{endtime,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      execute_result = #{executeResult,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="groupbyTypeLog" resultType="java.util.Map">
    select
      type,
      count(case when status = 1 then status else null end) as success,
      count(case when status = 2 then status else null end) as fail,
      count(case when status = 0 then status else null end) as ing
      from
      tasklog
      group by type
  </select>
</mapper>